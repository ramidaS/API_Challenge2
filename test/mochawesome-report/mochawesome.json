{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-16T14:59:31.915Z",
    "end": "2019-09-16T14:59:33.378Z",
    "duration": 1463,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9f651701-835b-498f-8998-8f8db9c42af6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0a62889f-22f4-4a5f-95b8-863452886d5a",
          "title": "/Put cancelOrder",
          "fullFile": "/Users/rami/Documents/API_Challenge/test/testCancelOrder.js",
          "file": "/testCancelOrder.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/Put cancelOrder \"before each\" hook",
              "timedOut": false,
              "duration": 78,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = await allAPIsFunctions.scheduleOrder(orderAt,locations);\norderId = response.data.id;\nreturn response, orderId;",
              "err": {},
              "uuid": "90ce524f-d5fb-4402-81d7-0c9e4ab146ff",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "1: should return HTTP 200 and ASSIGNING order should be cancelled successfully for normal flow.",
              "fullTitle": "/Put cancelOrder 1: should return HTTP 200 and ASSIGNING order should be cancelled successfully for normal flow.",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var cancelledOrder = await allAPIsFunctions.cancelOrder(orderId);\ncheckResponse.checkCancelledOrder(cancelledOrder, orderId, 200, \"CANCELLED\");",
              "err": {},
              "uuid": "264eeb98-981a-462d-bc02-5fe07cc2dc7e",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2: should return HTTP 200 and ONGOING order should be cancelled successfully for normal flow.",
              "fullTitle": "/Put cancelOrder 2: should return HTTP 200 and ONGOING order should be cancelled successfully for normal flow.",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await allAPIsFunctions.driverTakeOrder(orderId);\nvar cancelledOrder = await allAPIsFunctions.cancelOrder(orderId);\ncheckResponse.checkCancelledOrder(cancelledOrder, orderId, 200, \"CANCELLED\");",
              "err": {},
              "uuid": "3b884f0e-f172-4c3c-921c-4e760f9a275b",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3: should return HTTP 422 because COMPLETED order could not be cancelled.",
              "fullTitle": "/Put cancelOrder 3: should return HTTP 422 because COMPLETED order could not be cancelled.",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await allAPIsFunctions.driverTakeOrder(orderId);\nawait allAPIsFunctions.driverCompleteOrder(orderId);\nvar cancelledOrder = await allAPIsFunctions.cancelOrder(orderId);\ncheckResponse.checkCancelledOrder(cancelledOrder, orderId, 422);",
              "err": {},
              "uuid": "7b1c3af3-77cc-4249-ac5e-46f15e4a2f58",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4: should return HTTP 200 and CANCELLED order status should not be changed.",
              "fullTitle": "/Put cancelOrder 4: should return HTTP 200 and CANCELLED order status should not be changed.",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//This case is expected to be passed as result checked in Postman\n\t\tawait allAPIsFunctions.driverTakeOrder(orderId);\n\t\tawait allAPIsFunctions.cancelOrder(orderId);\n\t\tvar cancelledOrder = await allAPIsFunctions.cancelOrder(orderId);\n\t\tcheckResponse.checkCancelledOrder(cancelledOrder, orderId, 200, \"CANCELLED\");",
              "err": {},
              "uuid": "4ad4f599-a8ca-4faf-990d-cbb5d0314dfc",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "5: should return HTTP 404 because invalid orderId format",
              "fullTitle": "/Put cancelOrder 5: should return HTTP 404 because invalid orderId format",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var cancelledOrder = await allAPIsFunctions.cancelOrder(\"abc\");\ncancelledOrder.status.should.equal(404);\ncancelledOrder.data.should.equal(\"404 page not found\\n\");",
              "err": {},
              "uuid": "2183d927-f120-4667-a929-62812c739ea0",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "6: should return HTTP 404 because cancelling non-existing order",
              "fullTitle": "/Put cancelOrder 6: should return HTTP 404 because cancelling non-existing order",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Assume that orderId = 9999999 is not exists\n\t\tvar cancelledOrder = await allAPIsFunctions.cancelOrder(9999999);\n\t\tcheckResponse.checkCancelledOrder(cancelledOrder, orderId, 404);",
              "err": {},
              "uuid": "9d8a7124-3875-4c5e-a10e-1a2dc1019643",
              "parentUUID": "0a62889f-22f4-4a5f-95b8-863452886d5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "264eeb98-981a-462d-bc02-5fe07cc2dc7e",
            "3b884f0e-f172-4c3c-921c-4e760f9a275b",
            "7b1c3af3-77cc-4249-ac5e-46f15e4a2f58",
            "4ad4f599-a8ca-4faf-990d-cbb5d0314dfc",
            "2183d927-f120-4667-a929-62812c739ea0",
            "9d8a7124-3875-4c5e-a10e-1a2dc1019643"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}